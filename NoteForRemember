1, 非匿名函数存在name属性(函数的名称),匿名函数不存在name属性

2, 函数表达式,变量被提升,但当使用函数声明时,函数定义也被提升,而不仅仅是函数声明被提升

3, 函数被在自身内部重定义以后,已经添加到原始函数的任何属性都会丢失.

4, 创建函数时,它都会自动获得一个length属性,其中包含了该函数期望的参数数量

5, 对于构造函数的一般经验法则是:应该将可复用的成员添加到原型中

6, javascript继承模式:
    1 默认模式
    function  inherit(C, P) {
      C.prototype = new P();
    }
    缺点:不支持将参数传递到子构造函数中
    
    2 借用构造函数
    function Child(a, c, b, d) {
      Parent.apply(this, arguments);
    }
    重点:子类在借用构造函数的时候,新对象会获得父对象中中的成员副本(不是引用)
    缺点:没有原型,所以就没有原型继承,父对象原型中的属性和方法不能用
    
    3 借用和设置原型
    很好理解啦
    
    4 共享原型 
    function inherit(C, P) {
        C.prototype = P.prototype;
    }
    法则:可复用成员应该转移到原型中而不是放置在this中
    
    5 临时构造函数
    function inherit(C, P) {
        var F = function() {};
        F.prototype = P.prototype;
        C.prototype = new F();
    }
    好处不少 称为"圣杯"
    
    ``大部分基于类的语言中,每次在调用子类的构造函数时,父类的构造函数也将被自动调用
    ``避免使用以上
    
    6 原型继承
    function object(o) {
        function F() {}
        F.prototype = o;
        return new F();
    }

7 只是用一个var在函数顶部进行变量声明时一种非常有用的模式(尤其用于DOM文档的引用,是用单一var声明将DOM引用赋值给局部变量)

8 过滤掉原型链上的属性时,使用hasOwnProperty()方法

9 parseInt(year, 10);最好加上十进制

10 数组方法: push ---在数组尾部添加一个或多个元素,病返回数组的新的长度
             pop ---删除数组的最后一个元素,减小数组长度病返回它删除的值
             注意:两个方法都修改并替换原始数组而非生成一个修改版的新数组
             
             unshift ---在数组头部进行元素的插入,返回新数组长度
             shift ---在数组头部进行进行元素的删除,返回删除的元素
             
11 客户端请求一个页面（A）。 服务器返回页面A，并在给A加上一个ETag。 客户端展现该页面，并将页面连同ETag一起缓存。 客户再次请求页面A，并将上次请求时服务器返回的ETag一起传递给服务器。 服务器检查该ETag，并判断出该页面自上次客户端请求之后还未被修改，直接返回响应304（未修改——Not Modified）和一个空的响应体。

12 Etag在不同URL之间没有可比性，也就是不同URL相同Etag没有特别意义。

13 流程很简单，问题是，如果服务器又设置了Cache-Control:max-age和Expires呢，怎么办？
答案是同时使用，也就是说在完全匹配If-Modified-Since和If-None-Match即检查完修改时间和Etag之后，服务器才能返回304.(不要陷入到底使用谁的问题怪圈)

14 E:before/E::before 设置在对象前（依据对象树的逻辑结构）发生的内容。用来和content属性一起使用
   E:after/E::after 设置在对象后（依据对象树的逻辑结构）发生的内容。用来和content属性一起使用
   Ie6-7 不支持
   
15 content用来和:after及:before伪元素一起使用，在对象前或后显示内容。

16 "Event Loop是一个程序结构，用于等待和发送消息和事件。（a programming construct that waits for and dispatches events or messages in a program.）"
    简单说，就是在程序中设置两个线程：一个负责程序本身的运行，称为"主线程"；另一个负责主线程与其他进程（主要是各种I/O操作）的通信，被称为"Event Loop线程"（可以译为"消息线程"）。
    
17 <meta name="viewport" content="width=device-width, initial-scale=1" />
    viewport是网页默认的宽度和高度，上面这行代码的意思是，网页宽度默认等于屏幕宽度（width=device-width），原始缩放比例（initial-scale=1）为1.0，即网页初始大小占屏幕面积的100%。
    
18 字体大小em 是页面默认大小的100%，即16像素。

19 <link rel="stylesheet" type="text/css"
　　　　media="screen and (max-device-width: 400px)"
　　　　href="tinyScreen.css" />
　如果屏幕宽度小于400像素（max-device-width: 400px），就加载tinyScreen.css文件
　
20 @media screen and (max-device-width: 400px) {
　　　　.column {
　　　　　　float: none;
　　　　　　width:auto;
　　　　}
　　　　#sidebar {
　　　　　　display:none;
　　　　}
　　}
　　
　如果屏幕宽度小于400像素，则column块取消浮动（float:none）、宽度自动调节（width:auto），sidebar块不显示（display:none）。
21 图片自适应css设置 img {max-width: 100%}　

22 CSS2.1及所有后继版本中，对于任何以破折号、下划线开头的property:value组合和不包含标识符的@-keywords组合，都以忽略的方式处理。

23 对于行内非替换元素（例如 SPAN），垂直方向的margin不起作用。
