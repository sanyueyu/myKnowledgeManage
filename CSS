1, 必须已定位的元素才能设置z-index

2, 绝对定位的元素的位置相对于'最近的已定位祖先元素'，如果元素没有已定位的祖先元素，那么它的位置相对于'最初的包含块'。

3, 如果内部DIV设置为浮动的话,外部DIV的高度不能自适应

4, 使用'font:'简写方式,至少要指定'font-size' and 'font-family'

5, 对文字设置垂直居中:line-height: 盒高度

6, 外边距合并:W3C-----外边距合并

7, 同样的z-index时,后面的覆盖前面的,即如果重叠元素的z-index的值一样,它们按照在文档中出现的顺序绘制
    注意:z-index只对兄弟元素(例如:同一容器的子元素)应用堆叠效果.如果两个元素不是兄弟元素之间的重叠,那么设置它们的z-index属性无法决定哪一个显示在最上面.相反,"必须"设置这两个重叠元素的兄弟容器的z-index属性来达到目的.
    非定位元素,总是防止重叠的方式进行布局,因此z-index属性不会应用到它们上面.尽管如此,它们默认的z-index值为0,这意味着z-index为正值的定位元素显示在常规文档流的上面,而z-index为负值的定位元素显示在常规文档流的下面.
8, position:absolute设置left为负值不会出现滚动条,设置right为负值会出现滚动条

9, 层叠样式表层叠的含义:style中的样式覆盖了样式表中的样式,并且文档的样式表中的样式覆盖了浏览器的默认样式

10, -moz- Firefox浏览器
    -webkit Chrome浏览器
    -ms- IE浏览器

11, 外边距和绝对定位的元素无关

12, 首先 width和height只制定了元素内容区域的尺寸,它不包含元素的内边距和边框所需的任何额外空间
    其次 left和top属性指定了从容器边距内侧到定位元素边框外侧的距离.这些属性不是从容器内容区域的左上角开始度量的,而是从容器内边距的左上角开始的.

13, visibility设置hidden后文档布局中扔保留空间
